#! /usr/bin/perl -w

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# the usual fuss...

BEGIN { unshift @INC, ( $0 =~ /(.*?)((?<![^\/])bin\/)?[^\/]+$/ )[0] . "lib" }
use ReadConfig;
use MakeExt2Image;
use AddFiles;
use Conv2Image;

die "usage: $Script\n" if @ARGV;


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# some config data

$srcdir = "${DataPath}base";
$tmpdir = "${BasePath}tmp/base";

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# now we really start...

$debug = exists($ENV{'debug'}) ?  $ENV{'debug'} : "";

# clean up
if(-d($tmpdir)) {
  SUSystem "rm -rf $tmpdir" and die "$Script: failed to remove old $tmpdir";
}

AddFiles $tmpdir, "${srcdir}/base.file_list", $srcdir or
  die "$Script: failed to setup base system";

SUSystem "fix_perms $tmpdir";

SUSystem "ldconfig -r $tmpdir";
die "$Script: failed to run ldconfig" unless -f "$tmpdir/etc/ld.so.cache";

if($debug =~ /\bignore\b/ || $debug =~ /\bignorelibs\b/) {
  system "check_libs $tmpdir" and
    warn "$Script: error in shared lib config, please fix\n";
}
else {
  system "check_libs $tmpdir" and
    die "$Script: error in shared lib config, please fix\n";
}

system "module_deps $tmpdir/modules.dep >${BasePath}tmp/mod_deps" and
  die "$Script: base system broken\n";

print "$Script: base system ready\n";

