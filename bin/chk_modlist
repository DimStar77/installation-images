#! /usr/bin/perl

$mod_list = "data/initrd/modlist";
$initrd_files = "data/initrd/*.file_list";
$mods = shift;

die "oops\n" unless -d $mods;

open F, "$mod_list";

while(<F>) {
  next if /^\s*#/;
  next if /^\s*$/;

  if(/^(\S+)\/(\S+):\s*(.*?)\s*$/) {
    $module = $2;
    if(exists $m{$module}) {
      die "dupicate entry for \"$module\" ($mod_list, line $.)\n"
    }
    $m{$module}{'dir'} = $1;
    for $opt (split ' ', $3) {
      if($opt =~ /^\d+$/) {
        $m{$module}{'prio'} = $opt
      }
      else {
        $m{$module}{'opt'}{$opt} = 1
      }
    }
    if(!exists($m{$module}{'prio'})) {
      die "no priority for \"$module\" ($mod_list, line $.)\n"
    }
  }
  elsif(/^\s+(.*?)\s*$/ && $module && !exists($m{$module}{'descr'})) {
    $m{$module}{'descr'} = $1
  }
  else {
    die "invalid line ($mod_list, line $.)\n"
  }
}

close F;

#for (sort keys %m) {
#  print "$m{$_}{dir}/$_: $m{$_}{prio}";
#  if(exists $m{$_}{opt}) {
#    for $o (sort keys %{$m{$_}{opt}}) { print " $o" }
#  }
#  print "\n";
#  print "  $m{$_}{descr}\n" if exists $m{$_}{descr}
#}

for $dir ("block", "cdrom", "net", "pcmcia", "scsi") {
  for (<$mods/$dir/*.o>) {
    s/^.*\///; s/.o$//; push @$dir, $_;
  }
  @$dir = sort @$dir;
}

for $dir ("block", "cdrom", "net", "pcmcia", "scsi") {
  for (@$dir) {
    print "no info: $dir/$_\n" if !exists($m{$_})
  }
}

for $file (glob $initrd_files) {
  open F, $file;
  while(<F>) {
    if(m#^a\s+/lib/modules/.*/(.*?)\.o\s+/((modules)?)\s*#) {
      $ml{$1}{'disk'} = 1 if $2 eq 'modules';
      $ml{$1}{'mod'} = 1 if $2 eq '';
    }
  }
  close F;
}

#for (sort keys %ml) {
#  print "$_:";
#  print " disk" if exists $ml{$_}{'disk'};
#  print " mod" if exists $ml{$_}{'mod'};
#  print "\n"
#}

for (sort keys %m) {
  next unless $m{$_}{'prio'};
  if($m{$_}{opt}{disk} && !$ml{$_}{disk}) {
    print "not on any boot disk: $m{$_}{dir}/$_\n"
  }
}

for (sort keys %m) {
  next unless $m{$_}{'prio'};
  if((!$ml{$_}{disk} && !$ml{$_}{mod}) && !($m{$_}{opt}{disk} && !$ml{$_}{disk})) {
    print "not on any boot/module disk: $m{$_}{dir}/$_\n"
  }
}

