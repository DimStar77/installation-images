#! /usr/bin/perl -w

# Create module disk images.
#
# Usage:        mk_modules

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# the usual fuss...

BEGIN { unshift @INC, ( $0 =~ /(.*?)((?<![^\/])bin\/)?[^\/]+$/ )[0] . "lib" }
use ReadConfig;
use MakeMinixImage;
use MakeExt2Image;
use AddFiles;
use Conv2Image;

die "usage: $Script\n" if @ARGV;

sub list_modules;

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# some config data

$srcdir = "${DataPath}initrd";
$tmpdir = "${BasePath}tmp/modules";
$image = "${ImagePath}";

# the compressed image size varies only slightly with these; about +-1k with
# reasonable inode/block combinations

# leave that much space
$extra_size = 10;		# kbyte
$extra_inodes = 10;

# just make them large enough
$start_size = 4000;		# kbyte
$start_inodes = 4000;

$disk = 1;
$disk = $ENV{modules} + 0 if exists $ENV{modules};

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# now we really start...

# clean up
if(-d($tmpdir)) {
  SUSystem "rm -rf $tmpdir" and
    die "$Script: failed to remove old $tmpdir";
}

mkdir $tmpdir, 0755;

$fl = "modules";
$fl = $ENV{'filelist'} if exists $ENV{'filelist'};

if($disk == 2) {
  $ENV{'items'} = "net2";
  AddFiles "$tmpdir/net2mod", "${srcdir}/$fl.file_list", $srcdir, "net2" or
    die "$Script: failed to setup modules net image";
  list_modules "net2mod";

  $ENV{'items'} = "other2";
  AddFiles "$tmpdir/other2mo", "${srcdir}/$fl.file_list", $srcdir, "other2" or
    die "$Script: failed to setup modules other image";
  list_modules "other2mo";
}
else {
  $ENV{'items'} = "net";
  AddFiles "$tmpdir/net-mod", "${srcdir}/$fl.file_list", $srcdir, "net" or
    die "$Script: failed to setup modules net image";
  list_modules "net-mod";

  $ENV{'items'} = "other";
  AddFiles "$tmpdir/other-mod", "${srcdir}/$fl.file_list", $srcdir, "other" or
    die "$Script: failed to setup modules other image";
  list_modules "other-mod";

  $ENV{'items'} = "scsi";
  AddFiles "$tmpdir/scsi-mod", "${srcdir}/$fl.file_list", $srcdir, "scsi" or
    die "$Script: failed to setup modules scsi image";
  list_modules "scsi-mod";
}

# strip everything
SUSystem "strip_dir $tmpdir";

$fstype = !$ENV{'nominix'} ? 'minix' : 'ext2';

# create the image & compress it
if($disk == 2) {
  Conv2Image "$image/net2mod", "$tmpdir/net2mod", $fstype, $start_size, $start_inodes, $extra_size, $extra_inodes;
  Conv2Image "$image/other2mo", "$tmpdir/other2mo", $fstype, $start_size, $start_inodes, $extra_size, $extra_inodes;

  system "gzip -f -9 $image/net2mod" and die "$Script: gzip failed";
  system "gzip -f -9 $image/other2mo" and die "$Script: gzip failed";

  $i = -s "$image/net2mod.gz";
  print "$Script: compressed initrd to \"$image/net2mod.gz\" ($i bytes)\n";

  $i = -s "$image/other2mo.gz";
  print "$Script: compressed initrd to \"$image/other2mo.gz\" ($i bytes)\n";
}
else {
  Conv2Image "$image/net-mod", "$tmpdir/net-mod", $fstype, $start_size, $start_inodes, $extra_size, $extra_inodes;
  Conv2Image "$image/other-mod", "$tmpdir/other-mod", $fstype, $start_size, $start_inodes, $extra_size, $extra_inodes;
  Conv2Image "$image/scsi-mod", "$tmpdir/scsi-mod", $fstype, $start_size, $start_inodes, $extra_size, $extra_inodes;

  system "gzip -f -9 $image/net-mod" and die "$Script: gzip failed";
  system "gzip -f -9 $image/other-mod" and die "$Script: gzip failed";
  system "gzip -f -9 $image/scsi-mod" and die "$Script: gzip failed";

  $i = -s "$image/net-mod.gz";
  print "$Script: compressed initrd to \"$image/net-mod.gz\" ($i bytes)\n";

  $i = -s "$image/other-mod.gz";
  print "$Script: compressed initrd to \"$image/other-mod.gz\" ($i bytes)\n";

  $i = -s "$image/scsi-mod.gz";
  print "$Script: compressed initrd to \"$image/scsi-mod.gz\" ($i bytes)\n";
}


sub list_modules
{
  local $_;
  my ($dir, @m1, @m);

  $dir = shift;

  @m = `ls $tmpdir/$dir/*.o 2>/dev/null`;
  for (@m) {
    chomp;
    s#.*/##;
    s/\.o$//;
    push @m1, "$_\n"
  }

  open F, ">$tmpdir/$dir.modlist";
  print F @m1;
  close F;
}

