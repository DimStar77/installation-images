#! /usr/bin/perl

# Check yast2 packages dependencies.

BEGIN { $ENV{silent} = 1 }
BEGIN { unshift @INC, ( $0 =~ /(.*?)((?<![^\/])bin\/)?[^\/]+$/ )[0] . "lib" }
use ReadConfig;
use MakeMinixImage;
use MakeExt2Image;
use AddFiles;
use Conv2Image;

sub get_req;

$inst_rpms = "${BasePath}tmp/root.rpms";

# die "usage: $Script\n" if @ARGV;
for (@ARGV) { $packs{$_} = 0; $cnt++; }

$packs{"yast2-instsys"} = 0, $cnt++ unless $cnt;

if(!$AutoBuild) {
  $rpms = "$ConfigData{suse_base}/suse";
  die "$Script: where are the rpms?" unless $ConfigData{suse_base} && -d $rpms;
  $rpms = "$rpms/*";
}
else {
  $rpms = $AutoBuild;
  die "$Script: where are the rpms?" unless -d $rpms;
}

while($cnt) {
  @p = keys %packs;
  $cnt = 0;
  for (@p) {
    if($packs{$_} == 0) {
      get_req $_;
      $packs{$_} = 1;
      $cnt++;
    }
  }
}

open F, $inst_rpms;
while(<F>) {
  chomp;
  $inst_rpms{$_} = 1 if /^yast2/;
}
close F;

for (sort keys %inst_rpms) {
  push @toomany, "  $_\n" unless exists $packs{$_};
}

for (sort keys %packs) {
  push @missing, "  $_\n" unless exists $inst_rpms{$_};
}

$error = 0;

if(@toomany) {
  print "unnecessary yast2 packages:\n";
  print @toomany;
}

if(@missing) {
  print "missing yast2 packages:\n";
  print @missing;
  $error = 1;
}

exit $error;

sub get_req
{
  local $_;
  my (@p);

  $_ = shift;

  @p = `rpm --requires -qp $rpms/$_.rpm`;
  for (@p) {
    chomp;
    s/\s*$//;
    $packs{$_} += 0 if /^yast2\-/;
  }
}
