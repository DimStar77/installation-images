#!/bin/bash

# Author:  Fred Oberhauser <froh@suse.de>

# License: GPL

usage="$0 [IGNORE_FILE [ROOT]... ]

after this call, there are no more ampty subdirectories below root,
except those listed in IGNORE_FILE (which are supposed to be relative
to ROOT (which defaults to .))."

test $# -gt 0 && { IGNORE_FILE="$1"; shift; }

# set CONDOM=echo be on the safe side
: ${CONDOM:=}

# set VERBOSE to ':' if you don't want progress '.' (for files
# examined) and 'X' for directories to be removed.
: ${VERBOSE=}

# The algorithm: A shadow directory structure is built, which holds a
# directory entry for each directory that has to be preserved, either
# because it is listed in IGNORE_FILE or because it contains at least
# one file.

# The shadow structure is initialized with the directories listed in
# IGNORE_FILE.

# then all ROOT directories are scanned for files and directories,
# deepest entries first.  if during the scan a file is found, it's
# directory is shadowed.  if during the scan a directory is found and
# it's NOT shadowed, it will be deleted: all files that could be
# inside (nested deeper) have been examined before.

TEMPDIR=$(mktemp -d /tmp/$(basename $0).XXXXXX) || exit 1
trap "rm -rf '$TEMPDIR'" EXIT

test IGNORE_FILE = "-" && IGNORE_FILE=""
${IGNORE_FILE+eval 'cat $IGNORE_FILE | xargs --replace=@ mkdir -p $TEMPDIR/@'}

{
    find ${*+"$*"}    -type d -printf "%d D %p\n" 
    find ${*+"$*"} \! -type d -printf "%d X %h\n" 
} |
sort -k 1nr -k2,3 -u |
while read depth type directory
do
    #echo $depth $type $directory >&2
    $VERBOSE echo -n "." >&2
    case $type in
	D)
	    if test \! -d "$TEMPDIR/$directory"
	    then
		echo "$directory"
		$VERBOSE echo -n "X" >&2
	    fi
	    ;;
	X)
	    mkdir -p "$TEMPDIR/$directory"
	    ;;
    esac
done |
xargs --no-run-if-empty $CONDOM rmdir # --verbose
$VERBOSE echo