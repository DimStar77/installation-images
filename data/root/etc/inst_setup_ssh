# will be sourced by /sbin/inst_setup

# vim: syntax=sh

echo 'sshd found, prepare remote login'
unset SSH_FAILED
rm -rf /etc/ssh /root /etc/shadow
mkdir -p /root
cp -a $INSTSYS/root/.bash_login /root
cp -a $INSTSYS/root/.bash_history /root
cp -a $INSTSYS/root/.vimrc /root
cp -a $INSTSYS/etc/shadow /etc
cp -a $INSTSYS/etc/ssh /etc
grep -vi UsePrivilegeSeparation < $INSTSYS/etc/ssh/sshd_config > /etc/ssh/sshd_config
echo UsePrivilegeSeparation no >> /etc/ssh/sshd_config
chmod -R og-rxw  /etc/ssh /root /etc/shadow 2>/dev/null
chown -R 0.0  /etc/ssh /root /etc/shadow 2>/dev/null
echo "nameserver 10.10.0.1" > /etc/resolv.conf
echo "nameserver 10.10.11.1" >> /etc/resolv.conf
echo "search suse.de" >> /etc/resolv.conf
mkdir -p /dev/pts
mkdir -p /dev/shm
grep -q devpts /proc/mounts || \
mount -n -t devpts -o mode=0620,gid=5 devpts /dev/pts
/usr/sbin/sshd || {
export SSH_FAILED=true
echo 'sshd did NOT start!'
}
if [ ! "$SSH_FAILED" ] ; then
	echo
	echo /sbin/ifconfig `grep eth /proc/net/dev | cut -f 1 -d : `
	for i in  `grep eth /proc/net/dev | cut -f 1 -d : ` ; do
	    /sbin/ifconfig $i | grep UP > /dev/null 2>&1 && /sbin/ifconfig $i | head -n 2
	done
	cat <<EOF

      ***  sshd has been started  ***

  This is only done during beta tests.
  It is NOT a feature of the final release.

  If you don't want sshd to be started, use
  the 'nosshd' option at the boot prompt.

  Press return to contiunue...
EOF
	read
fi

grep -iq < /proc/cmdline debug && {
export Y2DEBUG=1
export Y2MAXLOGSIZE=50000
export Y2MAXLOGNUM=5
test -d $INSTSYS/root/.yast2 && cp -a $INSTSYS/root/.yast2 /root
}

